// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DbAppContext))]
    partial class DbAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DescripcionCategoria");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreCategoria");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdChef");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EspecialidadChef");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreChef");

                    b.HasKey("Id");

                    b.ToTable("chef", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHamburguesa");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreHamburguesa");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PrecioHamburguesa");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ChefId");

                    b.ToTable("hamburguesa", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.HamburguesaIngrediente", b =>
                {
                    b.Property<int>("HamburguesaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("HamburguesaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("hamburguesa_ingrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdIngrediente");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DescripcionIngrediente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NombreIngrediente");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("PrecioIngrediente");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("StockIngrediente");

                    b.HasKey("Id");

                    b.ToTable("ingrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.HasOne("Dominio.Entities.Categoria", null)
                        .WithMany("Hamburguesas")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Dominio.Entities.Chef", null)
                        .WithMany("Hamburguesas")
                        .HasForeignKey("ChefId");
                });

            modelBuilder.Entity("Dominio.Entities.HamburguesaIngrediente", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburguesa", "Hamburguesa")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("HamburguesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ingrediente", "Ingrediente")
                        .WithMany("HamburguesaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamburguesa");

                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Navigation("Hamburguesas");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburguesa", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Navigation("HamburguesaIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
